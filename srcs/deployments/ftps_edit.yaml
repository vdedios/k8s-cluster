apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-08-22T18:14:26Z"
  generation: 1
  labels:
    app: ftps
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:labels:
          .: {}
          f:app: {}
      f:spec:
        f:progressDeadlineSeconds: {}
        f:replicas: {}
        f:revisionHistoryLimit: {}
        f:selector:
          f:matchLabels:
            .: {}
            f:app: {}
        f:strategy:
          f:rollingUpdate:
            .: {}
            f:maxSurge: {}
            f:maxUnavailable: {}
          f:type: {}
        f:template:
          f:metadata:
            f:labels:
              .: {}
              f:app: {}
          f:spec:
            f:containers:
              k:{"name":"myftps"}:
                .: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:resources: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
            f:dnsPolicy: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:terminationGracePeriodSeconds: {}
    manager: kubectl
    operation: Update
    time: "2020-08-22T18:14:26Z"
  name: ftps
  namespace: default
  resourceVersion: "29151"
  selfLink: /apis/apps/v1/namespaces/default/deployments/ftps
  uid: 0bd91f3f-85b2-400b-b56a-adce6d8dcd6c
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: ftps
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: ftps
    spec:
      containers:
      - image: myftps
        imagePullPolicy: Never
        name: myftps
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-08-23T08:57:38Z"
  labels:
    app: ftps
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:labels:
          .: {}
          f:app: {}
      f:spec:
        f:externalTrafficPolicy: {}
        f:ports:
          .: {}
          k:{"port":21,"protocol":"TCP"}:
            .: {}
            f:name: {}
            f:port: {}
            f:protocol: {}
            f:targetPort: {}
          k:{"port":31030,"protocol":"TCP"}:
            .: {}
            f:name: {}
            f:port: {}
            f:protocol: {}
            f:targetPort: {}
          k:{"port":31031,"protocol":"TCP"}:
            .: {}
            f:name: {}
            f:port: {}
            f:protocol: {}
            f:targetPort: {}
          k:{"port":31032,"protocol":"TCP"}:
            .: {}
            f:name: {}
            f:port: {}
            f:protocol: {}
            f:targetPort: {}
          k:{"port":31033,"protocol":"TCP"}:
            .: {}
            f:name: {}
            f:port: {}
            f:protocol: {}
            f:targetPort: {}
          k:{"port":31034,"protocol":"TCP"}:
            .: {}
            f:name: {}
            f:port: {}
            f:protocol: {}
            f:targetPort: {}
          k:{"port":31035,"protocol":"TCP"}:
            .: {}
            f:name: {}
            f:port: {}
            f:protocol: {}
            f:targetPort: {}
          k:{"port":31036,"protocol":"TCP"}:
            .: {}
            f:name: {}
            f:port: {}
            f:protocol: {}
            f:targetPort: {}
          k:{"port":31037,"protocol":"TCP"}:
            .: {}
            f:name: {}
            f:port: {}
            f:protocol: {}
            f:targetPort: {}
          k:{"port":31038,"protocol":"TCP"}:
            .: {}
            f:name: {}
            f:port: {}
            f:protocol: {}
            f:targetPort: {}
          k:{"port":31039,"protocol":"TCP"}:
            .: {}
            f:name: {}
            f:port: {}
            f:protocol: {}
            f:targetPort: {}
          k:{"port":31040,"protocol":"TCP"}:
            .: {}
            f:name: {}
            f:port: {}
            f:protocol: {}
            f:targetPort: {}
        f:selector:
          .: {}
          f:app: {}
        f:sessionAffinity: {}
        f:type: {}
    manager: kubectl
    operation: Update
    time: "2020-08-23T08:57:38Z"
  name: ftps
  namespace: default
  resourceVersion: "33998"
  selfLink: /api/v1/namespaces/default/services/ftps
  uid: 589524e9-d32c-40c5-80a9-bfbe43db1193
spec:
  clusterIP: 10.103.216.2
  externalTrafficPolicy: Cluster
  ports:
  - name: port-1
    nodePort: 31821
    port: 21
    protocol: TCP
    targetPort: 21
  - name: port-2
    nodePort: 31620
    port: 31030
    protocol: TCP
    targetPort: 31030
  - name: port-3
    nodePort: 30474
    port: 31031
    protocol: TCP
    targetPort: 31031
  - name: port-4
    nodePort: 30221
    port: 31032
    protocol: TCP
    targetPort: 31032
  - name: port-5
    nodePort: 32709
    port: 31033
    protocol: TCP
    targetPort: 31033
  - name: port-6
    nodePort: 32138
    port: 31034
    protocol: TCP
    targetPort: 31034
  - name: port-7
    nodePort: 31595
    port: 31035
    protocol: TCP
    targetPort: 31035
  - name: port-8
    nodePort: 30076
    port: 31036
    protocol: TCP
    targetPort: 31036
  - name: port-9
    nodePort: 31985
    port: 31037
    protocol: TCP
    targetPort: 31037
  - name: port-10
    nodePort: 31972
    port: 31038
    protocol: TCP
    targetPort: 31038
  - name: port-11
    nodePort: 30481
    port: 31039
    protocol: TCP
    targetPort: 31039
  - name: port-12
    nodePort: 31776
    port: 31040
    protocol: TCP
    targetPort: 31040
  selector:
    app: ftps
  sessionAffinity: None
  type: LoadBalancer
  loadBalancerIP: 192.168.64.121
status:
  loadBalancer: {}
